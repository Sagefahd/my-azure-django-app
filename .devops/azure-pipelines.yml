trigger:
  branches:
    include:
      - main

stages:
  - stage: Deploy_Infrastructure
    displayName: "Deploy Infrastructure (Terraform)"
    jobs:
      - job: Terraform_Apply
        displayName: "Terraform Apply"
        pool:
          vmImage: 'ubuntu-latest'
          variables:
          # Reference the sageVariableGroup 
          - group: sageVariableGroup   # This links the variable group 'sageVariableGroup' to this pipeline
        steps:
          # Install Terraform
          - script: |
              echo "Installing Terraform..."
              wget https://releases.hashicorp.com/terraform/1.3.7/terraform_1.3.7_linux_amd64.zip
              unzip terraform_1.3.7_linux_amd64.zip
              sudo mv terraform /usr/local/bin/
              terraform --version
            displayName: "Install Terraform"

          # Initialize Terraform
          - script: |
              echo "Initializing Terraform..."
              cd containerApp
              terraform init
            displayName: "Terraform Init"

          # Apply Terraform
          - script: |
              echo "Applying Terraform..."
              cd containerApp
              terraform apply -auto-approve
            displayName: "Terraform Apply"

  - stage: Build_And_Push_Image
    displayName: "Build and Push Docker Image"
    dependsOn: Deploy_Infrastructure
    jobs:
      - job: Build_Push_Image
        displayName: "Build and Push Image"
        pool:
          vmImage: 'ubuntu-latest'
        steps:
          # Log in to Azure using the service connection
          - task: AzureCLI@2
            inputs:
              azureSubscription: 'azure-service-connection'  # Use the service connection
              scriptType: 'bash'
              scriptLocation: 'inlineScript'
              inlineScript: |
                echo "Logging in to Azure..."
                az account show  # Verify authentication

          # Build and push the Docker image to ACR
          - task: Docker@2
            inputs:
              containerRegistry: '$(ACR_NAME).azurecr.io'
              repository: '$(APP_NAME)'
              command: 'buildAndPush'
              Dockerfile: '**/Dockerfile'
              tags: 'latest'

  - stage: Update_Container_App
    displayName: "Update Container App"
    dependsOn: Build_And_Push_Image
    jobs:
      - job: Update_App
        displayName: "Update App"
        pool:
          vmImage: 'ubuntu-latest'
        steps:
          # Log in to Azure using the service connection
          - task: AzureCLI@2
            inputs:
              azureSubscription: 'azure-service-connection'  # Use the service connection
              scriptType: 'bash'
              scriptLocation: 'inlineScript'
              inlineScript: |
                echo "Logging in to Azure..."
                az account show  # Verify authentication

          # Update the Container App with the latest image
          - script: |
              echo "Updating Container App with new image..."
              az containerapp update \
                --name $(APP_NAME) \
                --resource-group $(RESOURCE_GROUP_NAME) \
                --image $(ACR_NAME).azurecr.io/$(APP_NAME):latest
            displayName: "Update Container App"